name: Application CI

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths: ["application/**"]

  pull_request:
    branches: [master]
    paths: ["application/**"]


jobs:
  Lint:
    name : Lint Code
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      
    - uses: super-linter/super-linter@v5.7.2
      name: Super-Linter
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_YAML: false
      

  
  build-Push-ECR:
    
    name: Build Image
    needs: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:

    - name: Check out code
      uses: actions/checkout@v3
      with:
          token: ${{ secrets.PAT }}
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get commit hash
      id: commit-hash
      run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nodejs-app-repo
        IMAGE_TAG: ${{ steps.commit-hash.outputs.COMMIT_HASH }} 
      run: |
        cd application
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest 

        sed -i "s/TAG/$IMAGE_TAG/g" ../terraform/ecs.tf

    - uses: stefanzweifel/git-auto-commit-action@v5
      name: commit changes to Tag
